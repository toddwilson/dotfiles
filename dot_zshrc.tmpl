# Use .bashrc when possible for cross-compatibility with bash
if [ -f "$HOME/.bashrc" ]; then
  source "$HOME/.bashrc"
fi

{{ if eq .chezmoi.os "darwin" }}

  # Currently only want these on MacOS
  export OPENAI_API_KEY="{{ .secrets.keys.openai }}"
  export ANTHROPIC_API_KEY="{{ .secrets.keys.anthropic }}"
  export FIREWORKS_AI_API_KEY="{{ .secrets.keys.fireworks_ai }}"
  export GEMINI_API_KEY="{{ .secrets.keys.gemini }}"

  alias s="sesh connect \$(sesh list | fzf)"
  # alias cat="bat"

  alias code=codium
  alias icloud="cd ~/Library/Mobile\ Documents/com~apple~CloudDocs"

  if _have eza; then 
    alias ls="eza"
    alias ll="eza -la"
    alias tree='eza --tree "$@"'
  fi

  if _have fzf; then
    # Set up fzf key bindings and fuzzy completion
    source <(fzf --zsh)
  fi

  if _have zoxide; then 
    # Zoxide (better cd)
    eval "$(zoxide init zsh)"
  fi

  # Bind sesh menu to option(alt)+s
  if _have sesh; then
    function sesh-sessions() {
      {
        exec </dev/tty
        exec <&1
        local session
        session=$(sesh list -t -c | fzf --height 40% --reverse --border-label ' sesh ' --border --prompt 'âš¡  ')
        zle reset-prompt > /dev/null 2>&1 || true
        [[ -z "$session" ]] && return
        sesh connect $session
      }
    }

    zle     -N             sesh-sessions
    bindkey -M emacs '\es' sesh-sessions
    bindkey -M vicmd '\es' sesh-sessions
    bindkey -M viins '\es' sesh-sessions

  fi

  # Starship
  if _have starship; then
    eval "$(starship init zsh)"
  fi

  # Added by dart cli
  [[ -f $HOME/.dart-cli-completion/zsh-config.zsh ]] && . $HOME/.dart-cli-completion/zsh-config.zsh || true

  # Homebrew LLVM doesn't add all tools to the path, such as clang-tidy
  export PATH="/opt/homebrew/opt/llvm/bin:$PATH"

  # Use Arc as our Chromium option (for now)
  export CHROME_EXECUTABLE=/Applications/Arc.app/Contents/MacOS/Arc

  # Obsidian + zk vault
  export NOTES_VAULT="$HOME/Library/Mobile\ Documents/iCloud\~md\~obsidian/Documents/Todd\'s\ Vault"
  export ZK_NOTEBOOK_DIR=$NOTES_VAULT
  alias vault="cd $NOTES_VAULT"

  # Lynx config
  if [ -e "$HOME/.config/lynx/lynx.cfg" ];then
    export LYNX_CFG_PATH="$HOME/.config/lynx/"
  fi

  # Added by LM Studio CLI (lms)
  export PATH="$PATH:$HOME/.lmstudio/bin"


{{ end }}
